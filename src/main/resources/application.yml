server:
  port: 0

spring:
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8484/auth/realms/techno-park
  application:
    name: user-backend
    version: 1.0.0
  datasource:
    url: jdbc:postgresql://${DATABASE_DOMAIN:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:test}
    username: ${DATABASE_USERNAME:-postgres}
    password: ${DATABASE_PASSWORD:-postgres}
    driver-class-name: ${DRIVER_CLASS_NAME:org.postgresql.Driver}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true
    defer-datasource-initialization: true
  sql:
    init:
      mode: always

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8888/eureka
  instance:
    instance-id: ${spring.application.name}:${random.value}
#spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_REALM_ISSUER_URL:http://localhost:8484/auth/realms/techno-park}
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_REALM_CERT_URL:http://localhost:8484/auth/realms/techno-park/protocol/openid-connect/certs}



